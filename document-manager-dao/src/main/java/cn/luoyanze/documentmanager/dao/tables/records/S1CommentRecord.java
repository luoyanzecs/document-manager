/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1CommentTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1CommentRecord extends UpdatableRecordImpl<S1CommentRecord> implements Record7<Integer, Integer, Integer, String, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_COMMENT.primary_id</code>. 自增主键
     */
    public void setPrimaryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.primary_id</code>. 自增主键
     */
    public Integer getPrimaryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.doc_id</code>. 文章id
     */
    public void setDocId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.doc_id</code>. 文章id
     */
    public Integer getDocId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.user_id</code>. 用户id
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.user_id</code>. 用户id
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.ctx</code>. 评论内容
     */
    public void setCtx(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.ctx</code>. 评论内容
     */
    public String getCtx() {
        return (String) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.create_time</code>. 评论创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.create_time</code>. 评论创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.parent_id</code>. 上级评论
     */
    public void setParentId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.parent_id</code>. 上级评论
     */
    public Integer getParentId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_COMMENT.isDel</code>. 0表示正常， 1为删除
     */
    public void setIsdel(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_COMMENT.isDel</code>. 0表示正常， 1为删除
     */
    public Integer getIsdel() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, String, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, String, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return S1CommentTB.S1_COMMENT.PRIMARY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return S1CommentTB.S1_COMMENT.DOC_ID;
    }

    @Override
    public Field<Integer> field3() {
        return S1CommentTB.S1_COMMENT.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return S1CommentTB.S1_COMMENT.CTX;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return S1CommentTB.S1_COMMENT.CREATE_TIME;
    }

    @Override
    public Field<Integer> field6() {
        return S1CommentTB.S1_COMMENT.PARENT_ID;
    }

    @Override
    public Field<Integer> field7() {
        return S1CommentTB.S1_COMMENT.ISDEL;
    }

    @Override
    public Integer component1() {
        return getPrimaryId();
    }

    @Override
    public Integer component2() {
        return getDocId();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getCtx();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public Integer component6() {
        return getParentId();
    }

    @Override
    public Integer component7() {
        return getIsdel();
    }

    @Override
    public Integer value1() {
        return getPrimaryId();
    }

    @Override
    public Integer value2() {
        return getDocId();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getCtx();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public Integer value6() {
        return getParentId();
    }

    @Override
    public Integer value7() {
        return getIsdel();
    }

    @Override
    public S1CommentRecord value1(Integer value) {
        setPrimaryId(value);
        return this;
    }

    @Override
    public S1CommentRecord value2(Integer value) {
        setDocId(value);
        return this;
    }

    @Override
    public S1CommentRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public S1CommentRecord value4(String value) {
        setCtx(value);
        return this;
    }

    @Override
    public S1CommentRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public S1CommentRecord value6(Integer value) {
        setParentId(value);
        return this;
    }

    @Override
    public S1CommentRecord value7(Integer value) {
        setIsdel(value);
        return this;
    }

    @Override
    public S1CommentRecord values(Integer value1, Integer value2, Integer value3, String value4, LocalDateTime value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1CommentRecord
     */
    public S1CommentRecord() {
        super(S1CommentTB.S1_COMMENT);
    }

    /**
     * Create a detached, initialised S1CommentRecord
     */
    public S1CommentRecord(Integer primaryId, Integer docId, Integer userId, String ctx, LocalDateTime createTime, Integer parentId, Integer isdel) {
        super(S1CommentTB.S1_COMMENT);

        setPrimaryId(primaryId);
        setDocId(docId);
        setUserId(userId);
        setCtx(ctx);
        setCreateTime(createTime);
        setParentId(parentId);
        setIsdel(isdel);
    }
}
