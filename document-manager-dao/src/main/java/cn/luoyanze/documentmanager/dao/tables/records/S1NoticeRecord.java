/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1NoticeTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1NoticeRecord extends UpdatableRecordImpl<S1NoticeRecord> implements Record10<Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_NOTICE.primary_id</code>. 自增主键
     */
    public void setPrimaryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.primary_id</code>. 自增主键
     */
    public Integer getPrimaryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.type</code>. 内容type
     */
    public void setType(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.type</code>. 内容type
     */
    public Integer getType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.content</code>. 内容
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.content</code>. 内容
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.start_time</code>. 起始时间
     */
    public void setStartTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.start_time</code>. 起始时间
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.end_time</code>. 结束时间
     */
    public void setEndTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.end_time</code>. 结束时间
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.accept_users</code>. 接收用户列表 逗号分隔
     */
    public void setAcceptUsers(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.accept_users</code>. 接收用户列表 逗号分隔
     */
    public String getAcceptUsers() {
        return (String) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.accept_bu</code>. 接收部门列表, 逗号分隔
     */
    public void setAcceptBu(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.accept_bu</code>. 接收部门列表, 逗号分隔
     */
    public String getAcceptBu() {
        return (String) get(6);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.is_global</code>. 是否全局通知 1全局
     */
    public void setIsGlobal(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.is_global</code>. 是否全局通知 1全局
     */
    public Integer getIsGlobal() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.isDel</code>. 0表示正常， 1为删除
     */
    public void setIsdel(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.isDel</code>. 0表示正常， 1为删除
     */
    public Integer getIsdel() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>document_manager.S1_NOTICE.user_id</code>. 关联用户表
     */
    public void setUserId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>document_manager.S1_NOTICE.user_id</code>. 关联用户表
     */
    public Integer getUserId() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, String, LocalDateTime, LocalDateTime, String, String, Integer, Integer, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return S1NoticeTB.S1_NOTICE.PRIMARY_ID;
    }

    @Override
    public Field<Integer> field2() {
        return S1NoticeTB.S1_NOTICE.TYPE;
    }

    @Override
    public Field<String> field3() {
        return S1NoticeTB.S1_NOTICE.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return S1NoticeTB.S1_NOTICE.START_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return S1NoticeTB.S1_NOTICE.END_TIME;
    }

    @Override
    public Field<String> field6() {
        return S1NoticeTB.S1_NOTICE.ACCEPT_USERS;
    }

    @Override
    public Field<String> field7() {
        return S1NoticeTB.S1_NOTICE.ACCEPT_BU;
    }

    @Override
    public Field<Integer> field8() {
        return S1NoticeTB.S1_NOTICE.IS_GLOBAL;
    }

    @Override
    public Field<Integer> field9() {
        return S1NoticeTB.S1_NOTICE.ISDEL;
    }

    @Override
    public Field<Integer> field10() {
        return S1NoticeTB.S1_NOTICE.USER_ID;
    }

    @Override
    public Integer component1() {
        return getPrimaryId();
    }

    @Override
    public Integer component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public LocalDateTime component4() {
        return getStartTime();
    }

    @Override
    public LocalDateTime component5() {
        return getEndTime();
    }

    @Override
    public String component6() {
        return getAcceptUsers();
    }

    @Override
    public String component7() {
        return getAcceptBu();
    }

    @Override
    public Integer component8() {
        return getIsGlobal();
    }

    @Override
    public Integer component9() {
        return getIsdel();
    }

    @Override
    public Integer component10() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getPrimaryId();
    }

    @Override
    public Integer value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public LocalDateTime value4() {
        return getStartTime();
    }

    @Override
    public LocalDateTime value5() {
        return getEndTime();
    }

    @Override
    public String value6() {
        return getAcceptUsers();
    }

    @Override
    public String value7() {
        return getAcceptBu();
    }

    @Override
    public Integer value8() {
        return getIsGlobal();
    }

    @Override
    public Integer value9() {
        return getIsdel();
    }

    @Override
    public Integer value10() {
        return getUserId();
    }

    @Override
    public S1NoticeRecord value1(Integer value) {
        setPrimaryId(value);
        return this;
    }

    @Override
    public S1NoticeRecord value2(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public S1NoticeRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public S1NoticeRecord value4(LocalDateTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public S1NoticeRecord value5(LocalDateTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public S1NoticeRecord value6(String value) {
        setAcceptUsers(value);
        return this;
    }

    @Override
    public S1NoticeRecord value7(String value) {
        setAcceptBu(value);
        return this;
    }

    @Override
    public S1NoticeRecord value8(Integer value) {
        setIsGlobal(value);
        return this;
    }

    @Override
    public S1NoticeRecord value9(Integer value) {
        setIsdel(value);
        return this;
    }

    @Override
    public S1NoticeRecord value10(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public S1NoticeRecord values(Integer value1, Integer value2, String value3, LocalDateTime value4, LocalDateTime value5, String value6, String value7, Integer value8, Integer value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1NoticeRecord
     */
    public S1NoticeRecord() {
        super(S1NoticeTB.S1_NOTICE);
    }

    /**
     * Create a detached, initialised S1NoticeRecord
     */
    public S1NoticeRecord(Integer primaryId, Integer type, String content, LocalDateTime startTime, LocalDateTime endTime, String acceptUsers, String acceptBu, Integer isGlobal, Integer isdel, Integer userId) {
        super(S1NoticeTB.S1_NOTICE);

        setPrimaryId(primaryId);
        setType(type);
        setContent(content);
        setStartTime(startTime);
        setEndTime(endTime);
        setAcceptUsers(acceptUsers);
        setAcceptBu(acceptBu);
        setIsGlobal(isGlobal);
        setIsdel(isdel);
        setUserId(userId);
    }
}
