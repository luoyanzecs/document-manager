/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1TraceTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1TraceRecord extends UpdatableRecordImpl<S1TraceRecord> implements Record8<String, Integer, String, String, String, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_TRACE.uuid</code>. traceid
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.uuid</code>. traceid
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.user_id</code>. 用户id
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.user_id</code>. 用户id
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.url</code>. 请求路径
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.url</code>. 请求路径
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.store_request</code>. 请求body
     */
    public void setStoreRequest(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.store_request</code>. 请求body
     */
    public String getStoreRequest() {
        return (String) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.store_response</code>. 响应body
     */
    public void setStoreResponse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.store_response</code>. 响应body
     */
    public String getStoreResponse() {
        return (String) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.request_time</code>. 请求时间
     */
    public void setRequestTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.request_time</code>. 请求时间
     */
    public LocalDateTime getRequestTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.response_time</code>. 响应时间
     */
    public void setResponseTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.response_time</code>. 响应时间
     */
    public LocalDateTime getResponseTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>document_manager.S1_TRACE.internal</code>. 处理总时间
     */
    public void setInternal(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>document_manager.S1_TRACE.internal</code>. 处理总时间
     */
    public Integer getInternal() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, Integer, String, String, String, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, Integer, String, String, String, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return S1TraceTB.S1_TRACE.UUID;
    }

    @Override
    public Field<Integer> field2() {
        return S1TraceTB.S1_TRACE.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return S1TraceTB.S1_TRACE.URL;
    }

    @Override
    public Field<String> field4() {
        return S1TraceTB.S1_TRACE.STORE_REQUEST;
    }

    @Override
    public Field<String> field5() {
        return S1TraceTB.S1_TRACE.STORE_RESPONSE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return S1TraceTB.S1_TRACE.REQUEST_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return S1TraceTB.S1_TRACE.RESPONSE_TIME;
    }

    @Override
    public Field<Integer> field8() {
        return S1TraceTB.S1_TRACE.INTERNAL;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public String component4() {
        return getStoreRequest();
    }

    @Override
    public String component5() {
        return getStoreResponse();
    }

    @Override
    public LocalDateTime component6() {
        return getRequestTime();
    }

    @Override
    public LocalDateTime component7() {
        return getResponseTime();
    }

    @Override
    public Integer component8() {
        return getInternal();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public String value4() {
        return getStoreRequest();
    }

    @Override
    public String value5() {
        return getStoreResponse();
    }

    @Override
    public LocalDateTime value6() {
        return getRequestTime();
    }

    @Override
    public LocalDateTime value7() {
        return getResponseTime();
    }

    @Override
    public Integer value8() {
        return getInternal();
    }

    @Override
    public S1TraceRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public S1TraceRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public S1TraceRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public S1TraceRecord value4(String value) {
        setStoreRequest(value);
        return this;
    }

    @Override
    public S1TraceRecord value5(String value) {
        setStoreResponse(value);
        return this;
    }

    @Override
    public S1TraceRecord value6(LocalDateTime value) {
        setRequestTime(value);
        return this;
    }

    @Override
    public S1TraceRecord value7(LocalDateTime value) {
        setResponseTime(value);
        return this;
    }

    @Override
    public S1TraceRecord value8(Integer value) {
        setInternal(value);
        return this;
    }

    @Override
    public S1TraceRecord values(String value1, Integer value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1TraceRecord
     */
    public S1TraceRecord() {
        super(S1TraceTB.S1_TRACE);
    }

    /**
     * Create a detached, initialised S1TraceRecord
     */
    public S1TraceRecord(String uuid, Integer userId, String url, String storeRequest, String storeResponse, LocalDateTime requestTime, LocalDateTime responseTime, Integer internal) {
        super(S1TraceTB.S1_TRACE);

        setUuid(uuid);
        setUserId(userId);
        setUrl(url);
        setStoreRequest(storeRequest);
        setStoreResponse(storeResponse);
        setRequestTime(requestTime);
        setResponseTime(responseTime);
        setInternal(internal);
    }
}
