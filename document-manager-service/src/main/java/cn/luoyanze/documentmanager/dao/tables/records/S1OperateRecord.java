/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1OperateTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1OperateRecord extends UpdatableRecordImpl<S1OperateRecord> implements Record6<UInteger, UInteger, LocalDateTime, UInteger, UInteger, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_OPERATE.primary_id</code>. 自增主键
     */
    public void setPrimaryId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.primary_id</code>. 自增主键
     */
    public UInteger getPrimaryId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_OPERATE.type</code>. 操作类型
     */
    public void setType(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.type</code>. 操作类型
     */
    public UInteger getType() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_OPERATE.time</code>. 操作时间
     */
    public void setTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.time</code>. 操作时间
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_OPERATE.doc_id</code>. 文章uuid
     */
    public void setDocId(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.doc_id</code>. 文章uuid
     */
    public UInteger getDocId() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_OPERATE.user_id</code>. user uuid
     */
    public void setUserId(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.user_id</code>. user uuid
     */
    public UInteger getUserId() {
        return (UInteger) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_OPERATE.content</code>. 内容保留字段
     */
    public void setContent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_OPERATE.content</code>. 内容保留字段
     */
    public String getContent() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, UInteger, LocalDateTime, UInteger, UInteger, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UInteger, UInteger, LocalDateTime, UInteger, UInteger, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return S1OperateTB.S1_OPERATE.PRIMARY_ID;
    }

    @Override
    public Field<UInteger> field2() {
        return S1OperateTB.S1_OPERATE.TYPE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return S1OperateTB.S1_OPERATE.TIME;
    }

    @Override
    public Field<UInteger> field4() {
        return S1OperateTB.S1_OPERATE.DOC_ID;
    }

    @Override
    public Field<UInteger> field5() {
        return S1OperateTB.S1_OPERATE.USER_ID;
    }

    @Override
    public Field<String> field6() {
        return S1OperateTB.S1_OPERATE.CONTENT;
    }

    @Override
    public UInteger component1() {
        return getPrimaryId();
    }

    @Override
    public UInteger component2() {
        return getType();
    }

    @Override
    public LocalDateTime component3() {
        return getTime();
    }

    @Override
    public UInteger component4() {
        return getDocId();
    }

    @Override
    public UInteger component5() {
        return getUserId();
    }

    @Override
    public String component6() {
        return getContent();
    }

    @Override
    public UInteger value1() {
        return getPrimaryId();
    }

    @Override
    public UInteger value2() {
        return getType();
    }

    @Override
    public LocalDateTime value3() {
        return getTime();
    }

    @Override
    public UInteger value4() {
        return getDocId();
    }

    @Override
    public UInteger value5() {
        return getUserId();
    }

    @Override
    public String value6() {
        return getContent();
    }

    @Override
    public S1OperateRecord value1(UInteger value) {
        setPrimaryId(value);
        return this;
    }

    @Override
    public S1OperateRecord value2(UInteger value) {
        setType(value);
        return this;
    }

    @Override
    public S1OperateRecord value3(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public S1OperateRecord value4(UInteger value) {
        setDocId(value);
        return this;
    }

    @Override
    public S1OperateRecord value5(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public S1OperateRecord value6(String value) {
        setContent(value);
        return this;
    }

    @Override
    public S1OperateRecord values(UInteger value1, UInteger value2, LocalDateTime value3, UInteger value4, UInteger value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1OperateRecord
     */
    public S1OperateRecord() {
        super(S1OperateTB.S1_OPERATE);
    }

    /**
     * Create a detached, initialised S1OperateRecord
     */
    public S1OperateRecord(UInteger primaryId, UInteger type, LocalDateTime time, UInteger docId, UInteger userId, String content) {
        super(S1OperateTB.S1_OPERATE);

        setPrimaryId(primaryId);
        setType(type);
        setTime(time);
        setDocId(docId);
        setUserId(userId);
        setContent(content);
    }
}
