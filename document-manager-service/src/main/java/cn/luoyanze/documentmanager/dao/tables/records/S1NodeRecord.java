/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1NodeTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1NodeRecord extends UpdatableRecordImpl<S1NodeRecord> implements Record13<String, String, String, String, String, String, String, String, String, String, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_NODE.uuid</code>. uuid, 由前端生成
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.uuid</code>. uuid, 由前端生成
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.style</code>. dom样式
     */
    public void setStyle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.style</code>. dom样式
     */
    public String getStyle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.class</code>. class
     */
    public void setClass_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.class</code>. class
     */
    public String getClass_() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.attribute</code>. 其他的attribute，json格式，map接收
     */
    public void setAttribute(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.attribute</code>. 其他的attribute，json格式，map接收
     */
    public String getAttribute() {
        return (String) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.tag</code>. html标签
     */
    public void setTag(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.tag</code>. html标签
     */
    public String getTag() {
        return (String) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.type</code>. 节点类型
     */
    public void setType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.type</code>. 节点类型
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.parentUUID</code>. 父节点id
     */
    public void setParentuuid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.parentUUID</code>. 父节点id
     */
    public String getParentuuid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.index</code>. 层级索引
     */
    public void setIndex(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.index</code>. 层级索引
     */
    public String getIndex() {
        return (String) get(7);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.text</code>. 文本内容
     */
    public void setText(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.text</code>. 文本内容
     */
    public String getText() {
        return (String) get(8);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.hash</code>. hash值
     */
    public void setHash(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.hash</code>. hash值
     */
    public String getHash() {
        return (String) get(9);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.doc_id</code>. 文件id
     */
    public void setDocId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.doc_id</code>. 文件id
     */
    public Integer getDocId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.is_del</code>. 是否删除 1为删除 0为未删除
     */
    public void setIsDel(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.is_del</code>. 是否删除 1为删除 0为未删除
     */
    public Integer getIsDel() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>document_manager.S1_NODE.last_time</code>. 上次修改时间
     */
    public void setLastTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>document_manager.S1_NODE.last_time</code>. 上次修改时间
     */
    public LocalDateTime getLastTime() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, String, String, String, String, String, String, String, String, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, String, String, String, String, String, String, String, String, String, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return S1NodeTB.S1_NODE.UUID;
    }

    @Override
    public Field<String> field2() {
        return S1NodeTB.S1_NODE.STYLE;
    }

    @Override
    public Field<String> field3() {
        return S1NodeTB.S1_NODE.CLASS;
    }

    @Override
    public Field<String> field4() {
        return S1NodeTB.S1_NODE.ATTRIBUTE;
    }

    @Override
    public Field<String> field5() {
        return S1NodeTB.S1_NODE.TAG;
    }

    @Override
    public Field<String> field6() {
        return S1NodeTB.S1_NODE.TYPE;
    }

    @Override
    public Field<String> field7() {
        return S1NodeTB.S1_NODE.PARENTUUID;
    }

    @Override
    public Field<String> field8() {
        return S1NodeTB.S1_NODE.INDEX;
    }

    @Override
    public Field<String> field9() {
        return S1NodeTB.S1_NODE.TEXT;
    }

    @Override
    public Field<String> field10() {
        return S1NodeTB.S1_NODE.HASH;
    }

    @Override
    public Field<Integer> field11() {
        return S1NodeTB.S1_NODE.DOC_ID;
    }

    @Override
    public Field<Integer> field12() {
        return S1NodeTB.S1_NODE.IS_DEL;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return S1NodeTB.S1_NODE.LAST_TIME;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getStyle();
    }

    @Override
    public String component3() {
        return getClass_();
    }

    @Override
    public String component4() {
        return getAttribute();
    }

    @Override
    public String component5() {
        return getTag();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public String component7() {
        return getParentuuid();
    }

    @Override
    public String component8() {
        return getIndex();
    }

    @Override
    public String component9() {
        return getText();
    }

    @Override
    public String component10() {
        return getHash();
    }

    @Override
    public Integer component11() {
        return getDocId();
    }

    @Override
    public Integer component12() {
        return getIsDel();
    }

    @Override
    public LocalDateTime component13() {
        return getLastTime();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getStyle();
    }

    @Override
    public String value3() {
        return getClass_();
    }

    @Override
    public String value4() {
        return getAttribute();
    }

    @Override
    public String value5() {
        return getTag();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public String value7() {
        return getParentuuid();
    }

    @Override
    public String value8() {
        return getIndex();
    }

    @Override
    public String value9() {
        return getText();
    }

    @Override
    public String value10() {
        return getHash();
    }

    @Override
    public Integer value11() {
        return getDocId();
    }

    @Override
    public Integer value12() {
        return getIsDel();
    }

    @Override
    public LocalDateTime value13() {
        return getLastTime();
    }

    @Override
    public S1NodeRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public S1NodeRecord value2(String value) {
        setStyle(value);
        return this;
    }

    @Override
    public S1NodeRecord value3(String value) {
        setClass_(value);
        return this;
    }

    @Override
    public S1NodeRecord value4(String value) {
        setAttribute(value);
        return this;
    }

    @Override
    public S1NodeRecord value5(String value) {
        setTag(value);
        return this;
    }

    @Override
    public S1NodeRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public S1NodeRecord value7(String value) {
        setParentuuid(value);
        return this;
    }

    @Override
    public S1NodeRecord value8(String value) {
        setIndex(value);
        return this;
    }

    @Override
    public S1NodeRecord value9(String value) {
        setText(value);
        return this;
    }

    @Override
    public S1NodeRecord value10(String value) {
        setHash(value);
        return this;
    }

    @Override
    public S1NodeRecord value11(Integer value) {
        setDocId(value);
        return this;
    }

    @Override
    public S1NodeRecord value12(Integer value) {
        setIsDel(value);
        return this;
    }

    @Override
    public S1NodeRecord value13(LocalDateTime value) {
        setLastTime(value);
        return this;
    }

    @Override
    public S1NodeRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11, Integer value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1NodeRecord
     */
    public S1NodeRecord() {
        super(S1NodeTB.S1_NODE);
    }

    /**
     * Create a detached, initialised S1NodeRecord
     */
    public S1NodeRecord(String uuid, String style, String class_, String attribute, String tag, String type, String parentuuid, String index, String text, String hash, Integer docId, Integer isDel, LocalDateTime lastTime) {
        super(S1NodeTB.S1_NODE);

        setUuid(uuid);
        setStyle(style);
        setClass_(class_);
        setAttribute(attribute);
        setTag(tag);
        setType(type);
        setParentuuid(parentuuid);
        setIndex(index);
        setText(text);
        setHash(hash);
        setDocId(docId);
        setIsDel(isDel);
        setLastTime(lastTime);
    }
}
