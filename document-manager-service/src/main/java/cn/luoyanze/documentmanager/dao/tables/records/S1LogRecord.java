/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1LogTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1LogRecord extends UpdatableRecordImpl<S1LogRecord> implements Record7<Integer, String, String, String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_LOG.logId</code>. 日志ID
     */
    public void setLogid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.logId</code>. 日志ID
     */
    public Integer getLogid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.className</code>. 类名
     */
    public void setClassname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.className</code>. 类名
     */
    public String getClassname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.methodName</code>. 方法名称
     */
    public void setMethodname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.methodName</code>. 方法名称
     */
    public String getMethodname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.exceptionName</code>. 异常类型
     */
    public void setExceptionname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.exceptionName</code>. 异常类型
     */
    public String getExceptionname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.errMsg</code>. 错误信息
     */
    public void setErrmsg(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.errMsg</code>. 错误信息
     */
    public String getErrmsg() {
        return (String) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.stackTrace</code>. 异常堆栈信息
     */
    public void setStacktrace(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.stackTrace</code>. 异常堆栈信息
     */
    public String getStacktrace() {
        return (String) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_LOG.createTime</code>. 创建时间
     */
    public void setCreatetime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_LOG.createTime</code>. 创建时间
     */
    public LocalDateTime getCreatetime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, String, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, String, String, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return S1LogTB.S1_LOG.LOGID;
    }

    @Override
    public Field<String> field2() {
        return S1LogTB.S1_LOG.CLASSNAME;
    }

    @Override
    public Field<String> field3() {
        return S1LogTB.S1_LOG.METHODNAME;
    }

    @Override
    public Field<String> field4() {
        return S1LogTB.S1_LOG.EXCEPTIONNAME;
    }

    @Override
    public Field<String> field5() {
        return S1LogTB.S1_LOG.ERRMSG;
    }

    @Override
    public Field<String> field6() {
        return S1LogTB.S1_LOG.STACKTRACE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return S1LogTB.S1_LOG.CREATETIME;
    }

    @Override
    public Integer component1() {
        return getLogid();
    }

    @Override
    public String component2() {
        return getClassname();
    }

    @Override
    public String component3() {
        return getMethodname();
    }

    @Override
    public String component4() {
        return getExceptionname();
    }

    @Override
    public String component5() {
        return getErrmsg();
    }

    @Override
    public String component6() {
        return getStacktrace();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatetime();
    }

    @Override
    public Integer value1() {
        return getLogid();
    }

    @Override
    public String value2() {
        return getClassname();
    }

    @Override
    public String value3() {
        return getMethodname();
    }

    @Override
    public String value4() {
        return getExceptionname();
    }

    @Override
    public String value5() {
        return getErrmsg();
    }

    @Override
    public String value6() {
        return getStacktrace();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatetime();
    }

    @Override
    public S1LogRecord value1(Integer value) {
        setLogid(value);
        return this;
    }

    @Override
    public S1LogRecord value2(String value) {
        setClassname(value);
        return this;
    }

    @Override
    public S1LogRecord value3(String value) {
        setMethodname(value);
        return this;
    }

    @Override
    public S1LogRecord value4(String value) {
        setExceptionname(value);
        return this;
    }

    @Override
    public S1LogRecord value5(String value) {
        setErrmsg(value);
        return this;
    }

    @Override
    public S1LogRecord value6(String value) {
        setStacktrace(value);
        return this;
    }

    @Override
    public S1LogRecord value7(LocalDateTime value) {
        setCreatetime(value);
        return this;
    }

    @Override
    public S1LogRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1LogRecord
     */
    public S1LogRecord() {
        super(S1LogTB.S1_LOG);
    }

    /**
     * Create a detached, initialised S1LogRecord
     */
    public S1LogRecord(Integer logid, String classname, String methodname, String exceptionname, String errmsg, String stacktrace, LocalDateTime createtime) {
        super(S1LogTB.S1_LOG);

        setLogid(logid);
        setClassname(classname);
        setMethodname(methodname);
        setExceptionname(exceptionname);
        setErrmsg(errmsg);
        setStacktrace(stacktrace);
        setCreatetime(createtime);
    }
}
