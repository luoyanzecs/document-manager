/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1ExceptionTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1ExceptionRecord extends UpdatableRecordImpl<S1ExceptionRecord> implements Record4<Integer, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_EXCEPTION.primary_id</code>. 自增主键
     */
    public void setPrimaryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_EXCEPTION.primary_id</code>. 自增主键
     */
    public Integer getPrimaryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_EXCEPTION.time</code>. 时间
     */
    public void setTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_EXCEPTION.time</code>. 时间
     */
    public LocalDateTime getTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_EXCEPTION.type</code>. 类型
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_EXCEPTION.type</code>. 类型
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_EXCEPTION.ctx</code>. 内容
     */
    public void setCtx(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_EXCEPTION.ctx</code>. 内容
     */
    public String getCtx() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, LocalDateTime, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, LocalDateTime, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return S1ExceptionTB.S1_EXCEPTION.PRIMARY_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return S1ExceptionTB.S1_EXCEPTION.TIME;
    }

    @Override
    public Field<String> field3() {
        return S1ExceptionTB.S1_EXCEPTION.TYPE;
    }

    @Override
    public Field<String> field4() {
        return S1ExceptionTB.S1_EXCEPTION.CTX;
    }

    @Override
    public Integer component1() {
        return getPrimaryId();
    }

    @Override
    public LocalDateTime component2() {
        return getTime();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getCtx();
    }

    @Override
    public Integer value1() {
        return getPrimaryId();
    }

    @Override
    public LocalDateTime value2() {
        return getTime();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getCtx();
    }

    @Override
    public S1ExceptionRecord value1(Integer value) {
        setPrimaryId(value);
        return this;
    }

    @Override
    public S1ExceptionRecord value2(LocalDateTime value) {
        setTime(value);
        return this;
    }

    @Override
    public S1ExceptionRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public S1ExceptionRecord value4(String value) {
        setCtx(value);
        return this;
    }

    @Override
    public S1ExceptionRecord values(Integer value1, LocalDateTime value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1ExceptionRecord
     */
    public S1ExceptionRecord() {
        super(S1ExceptionTB.S1_EXCEPTION);
    }

    /**
     * Create a detached, initialised S1ExceptionRecord
     */
    public S1ExceptionRecord(Integer primaryId, LocalDateTime time, String type, String ctx) {
        super(S1ExceptionTB.S1_EXCEPTION);

        setPrimaryId(primaryId);
        setTime(time);
        setType(type);
        setCtx(ctx);
    }
}
