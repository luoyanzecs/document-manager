/*
 * This file is generated by jOOQ.
 */
package cn.luoyanze.documentmanager.dao.tables.records;


import cn.luoyanze.documentmanager.dao.tables.S1DocTB;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class S1DocRecord extends UpdatableRecordImpl<S1DocRecord> implements Record11<UInteger, String, String, Integer, Integer, String, UInteger, LocalDateTime, String, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>document_manager.S1_DOC.primary_id</code>. 自增主键
     */
    public void setPrimaryId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.primary_id</code>. 自增主键
     */
    public UInteger getPrimaryId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.uuid</code>. 文章UUID
     */
    public void setUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.uuid</code>. 文章UUID
     */
    public String getUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.permission_bu</code>. 允许的部门
     */
    public void setPermissionBu(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.permission_bu</code>. 允许的部门
     */
    public String getPermissionBu() {
        return (String) get(2);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.authority</code>. 允许的等级
     */
    public void setAuthority(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.authority</code>. 允许的等级
     */
    public Integer getAuthority() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.status</code>. 状态 0已删除， 1正常
     */
    public void setStatus(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.status</code>. 状态 0已删除， 1正常
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.ctx</code>. 内容
     */
    public void setCtx(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.ctx</code>. 内容
     */
    public String getCtx() {
        return (String) get(5);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.user_id</code>. 创建用户id
     */
    public void setUserId(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.user_id</code>. 创建用户id
     */
    public UInteger getUserId() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.last_update_time</code>. 最近修改时间登录时间
     */
    public void setLastUpdateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.last_update_time</code>. 最近修改时间登录时间
     */
    public LocalDateTime getLastUpdateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.title</code>. 标题
     */
    public void setTitle(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.title</code>. 标题
     */
    public String getTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.dir_id</code>. 上级目录ID
     */
    public void setDirId(UInteger value) {
        set(9, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.dir_id</code>. 上级目录ID
     */
    public UInteger getDirId() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>document_manager.S1_DOC.last_update_user_id</code>. 最近修改用户id
     */
    public void setLastUpdateUserId(UInteger value) {
        set(10, value);
    }

    /**
     * Getter for <code>document_manager.S1_DOC.last_update_user_id</code>. 最近修改用户id
     */
    public UInteger getLastUpdateUserId() {
        return (UInteger) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UInteger, String, String, Integer, Integer, String, UInteger, LocalDateTime, String, UInteger, UInteger> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UInteger, String, String, Integer, Integer, String, UInteger, LocalDateTime, String, UInteger, UInteger> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return S1DocTB.S1_DOC.PRIMARY_ID;
    }

    @Override
    public Field<String> field2() {
        return S1DocTB.S1_DOC.UUID;
    }

    @Override
    public Field<String> field3() {
        return S1DocTB.S1_DOC.PERMISSION_BU;
    }

    @Override
    public Field<Integer> field4() {
        return S1DocTB.S1_DOC.AUTHORITY;
    }

    @Override
    public Field<Integer> field5() {
        return S1DocTB.S1_DOC.STATUS;
    }

    @Override
    public Field<String> field6() {
        return S1DocTB.S1_DOC.CTX;
    }

    @Override
    public Field<UInteger> field7() {
        return S1DocTB.S1_DOC.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return S1DocTB.S1_DOC.LAST_UPDATE_TIME;
    }

    @Override
    public Field<String> field9() {
        return S1DocTB.S1_DOC.TITLE;
    }

    @Override
    public Field<UInteger> field10() {
        return S1DocTB.S1_DOC.DIR_ID;
    }

    @Override
    public Field<UInteger> field11() {
        return S1DocTB.S1_DOC.LAST_UPDATE_USER_ID;
    }

    @Override
    public UInteger component1() {
        return getPrimaryId();
    }

    @Override
    public String component2() {
        return getUuid();
    }

    @Override
    public String component3() {
        return getPermissionBu();
    }

    @Override
    public Integer component4() {
        return getAuthority();
    }

    @Override
    public Integer component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getCtx();
    }

    @Override
    public UInteger component7() {
        return getUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getLastUpdateTime();
    }

    @Override
    public String component9() {
        return getTitle();
    }

    @Override
    public UInteger component10() {
        return getDirId();
    }

    @Override
    public UInteger component11() {
        return getLastUpdateUserId();
    }

    @Override
    public UInteger value1() {
        return getPrimaryId();
    }

    @Override
    public String value2() {
        return getUuid();
    }

    @Override
    public String value3() {
        return getPermissionBu();
    }

    @Override
    public Integer value4() {
        return getAuthority();
    }

    @Override
    public Integer value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getCtx();
    }

    @Override
    public UInteger value7() {
        return getUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getLastUpdateTime();
    }

    @Override
    public String value9() {
        return getTitle();
    }

    @Override
    public UInteger value10() {
        return getDirId();
    }

    @Override
    public UInteger value11() {
        return getLastUpdateUserId();
    }

    @Override
    public S1DocRecord value1(UInteger value) {
        setPrimaryId(value);
        return this;
    }

    @Override
    public S1DocRecord value2(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public S1DocRecord value3(String value) {
        setPermissionBu(value);
        return this;
    }

    @Override
    public S1DocRecord value4(Integer value) {
        setAuthority(value);
        return this;
    }

    @Override
    public S1DocRecord value5(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public S1DocRecord value6(String value) {
        setCtx(value);
        return this;
    }

    @Override
    public S1DocRecord value7(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public S1DocRecord value8(LocalDateTime value) {
        setLastUpdateTime(value);
        return this;
    }

    @Override
    public S1DocRecord value9(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public S1DocRecord value10(UInteger value) {
        setDirId(value);
        return this;
    }

    @Override
    public S1DocRecord value11(UInteger value) {
        setLastUpdateUserId(value);
        return this;
    }

    @Override
    public S1DocRecord values(UInteger value1, String value2, String value3, Integer value4, Integer value5, String value6, UInteger value7, LocalDateTime value8, String value9, UInteger value10, UInteger value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached S1DocRecord
     */
    public S1DocRecord() {
        super(S1DocTB.S1_DOC);
    }

    /**
     * Create a detached, initialised S1DocRecord
     */
    public S1DocRecord(UInteger primaryId, String uuid, String permissionBu, Integer authority, Integer status, String ctx, UInteger userId, LocalDateTime lastUpdateTime, String title, UInteger dirId, UInteger lastUpdateUserId) {
        super(S1DocTB.S1_DOC);

        setPrimaryId(primaryId);
        setUuid(uuid);
        setPermissionBu(permissionBu);
        setAuthority(authority);
        setStatus(status);
        setCtx(ctx);
        setUserId(userId);
        setLastUpdateTime(lastUpdateTime);
        setTitle(title);
        setDirId(dirId);
        setLastUpdateUserId(lastUpdateUserId);
    }
}
